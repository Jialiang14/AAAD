import pickle
import sys
import ast


def parse_arch_to_darts(benchmark, arch):
    op_dict = {
	0: 'none',
	1: 'max_pool_3x3',
	2: 'avg_pool_3x3',
	3: 'skip_connect',
	4: 'sep_conv_3x3',
	5: 'sep_conv_5x5',
	6: 'dil_conv_3x3',
	7: 'dil_conv_5x5'
	}
    darts_arch = [[], []]
    i=0
    for cell in arch:
        for n in cell:
            darts_arch[i].append((op_dict[n[1]], n[0]))
        i += 1
    print('Genotype(normal=%s, normal_concat=[2,3,4,5], reduce=%s, reduce_concat=[2,3,4,5])' % (str(darts_arch[0]), str(darts_arch[1])))

if __name__=="__main__":
    # args = sys.argv[1:]
    # print(args[0])
    # arch = ast.literal_eval(args[0])
    # parse_arch_to_darts('cnn', arch)
    # arch = [(1, 3), (0, 0), (1, 4), (2, 4), (0, 3), (3, 3), (4, 1), (1, 6)], [(1, 4), (0, 0), (2, 2), (0, 6), (0, 0), (2, 5), (3, 1), (4, 6)]
    arch =  [(0, 5), (1, 5), (0, 2), (2, 1), (1, 2), (3, 5), (1, 2), (4, 5)], [(0, 3), (1, 7), (1, 3), (0, 3), (3, 5), (0, 7), (1, 1), (3, 1)]
    arch = [(0, 6), (1, 7), (1, 1), (0, 2), (0, 1), (3, 4), (0, 6), (1, 1)], [(1, 4), (0, 1), (2, 3), (0, 3), (0, 1), (2, 2), (2, 5), (1, 4)]
    arch = [(0, 4), (1, 4), (0, 3), (2, 7), (3, 7), (2, 3), (0, 2), (4, 4)], [(1, 1), (0, 3), (1, 2), (2, 6), (3, 7), (0, 1), (4, 5), (3, 1)]
    arch = [(0, 1), (1, 1), (1, 3), (2, 3), (3, 5), (2, 1), (4, 7), (0, 3)], [(1, 4), (0, 1), (0, 5), (2, 3), (2, 7), (3, 4), (4, 5), (2, 7)]
    arch = [(1, 0), (0, 0), (0, 4), (1, 5), (1, 0), (0, 3), (4, 2), (2, 2)], [(0, 5), (1, 0), (0, 3), (2, 3), (1, 7), (0, 7), (0, 7), (4, 7)]
    arch = [(1, 0), (0, 0), (0, 4), (1, 5), (1, 0), (0, 3), (4, 2), (2, 2)], [(0, 5), (1, 0), (0, 3), (2, 3), (1, 7), (0, 7), (0, 7), (4, 7)]
    parse_arch_to_darts('cnn', arch)