import os
import sys
import numpy as np
from utils import parse_genotype

def generate_weight():
    # loss weight: 10;   learning rate: 00025   1
    # normal_weight = np.array([[0.9271, 0.0565, 0.0720, 0.9485, 0.0640, 0.0624, 0.9498],
    #     [0.7997, 0.0456, 0.0569, 0.8913, 0.9074, 0.0643, 0.0803],
    #     [0.1584, 0.0567, 0.1089, 0.0777, 0.0888, 0.0445, 0.0727],
    #     [0.0512, 0.0450, 0.0721, 0.0824, 0.0478, 0.0575, 0.0583],
    #     [0.0323, 0.0343, 0.0350, 0.0481, 0.0663, 0.0632, 0.0601],
    #     [0.9427, 0.0737, 0.0922, 0.0669, 0.0640, 0.9387, 0.0660],
    #     [0.0587, 0.0596, 0.0670, 0.0612, 0.0602, 0.0554, 0.0552],
    #     [0.0495, 0.0532, 0.0557, 0.0615, 0.8427, 0.0608, 0.8926],
    #     [0.0526, 0.0577, 0.0674, 0.0648, 0.0591, 0.0596, 0.0601],
    #     [0.0622, 0.0575, 0.0667, 0.9278, 0.0636, 0.0669, 0.0696],
    #     [0.0561, 0.0537, 0.0607, 0.0734, 0.9054, 0.0648, 0.0667],
    #     [0.0445, 0.0452, 0.0399, 0.7752, 0.8680, 0.8941, 0.8895],
    #     [0.0456, 0.0470, 0.9285, 0.0642, 0.0602, 0.8850, 0.8618],
    #     [0.0462, 0.0487, 0.0479, 0.0560, 0.0657, 0.8895, 0.0679]])
    # reduce_weight = np.array([[0.9321, 0.0652, 0.9390, 0.0691, 0.0639, 0.9389, 0.9414],
    #     [0.9388, 0.9388, 0.9319, 0.9273, 0.0670, 0.0639, 0.0622],
    #     [0.9333, 0.0648, 0.9343, 0.9352, 0.9352, 0.9354, 0.9336],
    #     [0.0682, 0.0671, 0.0617, 0.9357, 0.9328, 0.9380, 0.9354],
    #     [0.0625, 0.0648, 0.9392, 0.9331, 0.0635, 0.0637, 0.0612],
    #     [0.9349, 0.9373, 0.0635, 0.0643, 0.9380, 0.9359, 0.0631],
    #     [0.0661, 0.0655, 0.0625, 0.9362, 0.9356, 0.0653, 0.9338],
    #     [0.0640, 0.0646, 0.9375, 0.0650, 0.9342, 0.9378, 0.0647],
    #     [0.0618, 0.0626, 0.9268, 0.0650, 0.9344, 0.0619, 0.9347],
    #     [0.9339, 0.9353, 0.9362, 0.0620, 0.9358, 0.0641, 0.9368],
    #     [0.0661, 0.0660, 0.9369, 0.0632, 0.0639, 0.9361, 0.9365],
    #     [0.0626, 0.0635, 0.9367, 0.9365, 0.0629, 0.9345, 0.0646],
    #     [0.0619, 0.0626, 0.9352, 0.0639, 0.9374, 0.0639, 0.9349],
    #     [0.0617, 0.0628, 0.0637, 0.9359, 0.0638, 0.9351, 0.9336]])

    ## loss weight: 10;   learning rate: 00025
    # normal_weight = np.array([[0.9349, 0.0654, 0.0888, 0.0846, 0.0955, 0.0758, 0.9275],
    #  [0.7077, 0.0456, 0.0566, 0.8634, 0.5202, 0.0623, 0.0791],
    #  [0.0756, 0.0567, 0.0740, 0.0553, 0.0716, 0.0712, 0.0658],
    #  [0.0494, 0.0512, 0.0653, 0.0516, 0.0646, 0.0689, 0.0743],
    #  [0.0371, 0.0417, 0.0438, 0.0654, 0.0501, 0.0674, 0.0564],
    #  [0.9266, 0.0580, 0.0714, 0.9356, 0.0633, 0.9428, 0.0587],
    #  [0.0550, 0.0559, 0.0643, 0.0689, 0.0648, 0.0614, 0.0567],
    #  [0.0450, 0.0496, 0.0512, 0.0681, 0.7530, 0.0672, 0.8575],
    #  [0.0448, 0.0474, 0.0597, 0.0644, 0.0710, 0.0697, 0.0603],
    #  [0.0647, 0.0605, 0.0663, 0.9192, 0.0637, 0.9278, 0.0690],
    #  [0.0517, 0.0540, 0.0611, 0.0665, 0.9023, 0.0593, 0.0627],
    #  [0.0438, 0.0467, 0.0457, 0.8502, 0.7561, 0.0677, 0.0565],
    #  [0.0464, 0.0478, 0.9301, 0.0605, 0.0555, 0.0516, 0.0589],
    #  [0.0466, 0.0483, 0.0463, 0.0603, 0.0648, 0.8834, 0.0702]])
    #
    # reduce_weight = np.array(
    #     [[0.9402, 0.0742, 0.9364, 0.9296, 0.0683, 0.9372, 0.9334],
    #      [0.9368, 0.9382, 0.9325, 0.9317, 0.0624, 0.0679, 0.0684],
    #      [0.9387, 0.0695, 0.9347, 0.9364, 0.0661, 0.9376, 0.9316],
    #      [0.0657, 0.0671, 0.0634, 0.9356, 0.9332, 0.9375, 0.9358],
    #      [0.0607, 0.0629, 0.9357, 0.9309, 0.0620, 0.0620, 0.0670],
    #      [0.9374, 0.9384, 0.9343, 0.9325, 0.9394, 0.9374, 0.9366],
    #      [0.0651, 0.0655, 0.0625, 0.0680, 0.9352, 0.0656, 0.9334],
    #      [0.0644, 0.0659, 0.9359, 0.0655, 0.0626, 0.9353, 0.0662],
    #      [0.0633, 0.0657, 0.9377, 0.0665, 0.9377, 0.0621, 0.9366],
    #      [0.9374, 0.0662, 0.9369, 0.0628, 0.9371, 0.0642, 0.9335],
    #      [0.0637, 0.0650, 0.9364, 0.0634, 0.0625, 0.9345, 0.9342],
    #      [0.0615, 0.0618, 0.9327, 0.0648, 0.0647, 0.0628, 0.0642],
    #      [0.0605, 0.0609, 0.9289, 0.0647, 0.9363, 0.9339, 0.9361],
    #      [0.0618, 0.0625, 0.0573, 0.9362, 0.0645, 0.9334, 0.9366]]
    # )

    # normal_weight = np.array(
    #     [[0.9243, 0.0566, 0.0705, 0.9338, 0.0711, 0.0723, 0.9424],
    #      [0.8500, 0.0466, 0.0569, 0.8545, 0.9263, 0.0677, 0.0665],
    #      [0.7379, 0.0498, 0.0705, 0.0581, 0.0750, 0.0617, 0.0695],
    #      [0.0813, 0.0605, 0.0912, 0.0827, 0.0602, 0.0655, 0.0623],
    #      [0.0342, 0.0367, 0.0338, 0.0612, 0.0790, 0.0739, 0.0489],
    #      [0.9302, 0.0662, 0.0775, 0.0680, 0.0590, 0.9451, 0.0634],
    #      [0.0601, 0.0652, 0.0739, 0.0609, 0.0687, 0.0643, 0.0551],
    #      [0.0469, 0.0515, 0.0521, 0.0623, 0.8476, 0.0667, 0.9127],
    #      [0.0457, 0.0529, 0.0590, 0.0666, 0.0558, 0.0667, 0.0730],
    #      [0.0527, 0.0526, 0.0601, 0.9342, 0.0668, 0.9351, 0.0700],
    #      [0.0529, 0.0539, 0.0630, 0.0735, 0.9167, 0.0745, 0.0651],
    #      [0.0411, 0.0426, 0.0373, 0.8314, 0.8501, 0.0713, 0.8858],
    #      [0.0411, 0.0452, 0.9011, 0.0686, 0.0697, 0.8395, 0.8989],
    #      [0.0442, 0.0472, 0.0440, 0.0578, 0.0625, 0.9018, 0.0731]]
    # )
    #
    # reduce_weight = np.array(
    #     [[0.9315, 0.0632, 0.9403, 0.9298, 0.0683, 0.9372, 0.9342],
    #      [0.9348, 0.9333, 0.9371, 0.9362, 0.0668, 0.9372, 0.0666],
    #      [0.9353, 0.9365, 0.9364, 0.9334, 0.9334, 0.9384, 0.9371],
    #      [0.0640, 0.0625, 0.0631, 0.9349, 0.9363, 0.9383, 0.9381],
    #      [0.0594, 0.0618, 0.9354, 0.9306, 0.0636, 0.0657, 0.0666],
    #      [0.9353, 0.9359, 0.0638, 0.0641, 0.9374, 0.9353, 0.9346],
    #      [0.0638, 0.0633, 0.9344, 0.0664, 0.9364, 0.0640, 0.9345],
    #      [0.0621, 0.0632, 0.9331, 0.0658, 0.9346, 0.9342, 0.0645],
    #      [0.0625, 0.0629, 0.9300, 0.0664, 0.9373, 0.0647, 0.9359],
    #      [0.0628, 0.0634, 0.9374, 0.0626, 0.9364, 0.0634, 0.9344],
    #      [0.0651, 0.0650, 0.9364, 0.0616, 0.0633, 0.0650, 0.9367],
    #      [0.0611, 0.0633, 0.9347, 0.9360, 0.0622, 0.9346, 0.0634],
    #      [0.0609, 0.0619, 0.9299, 0.0662, 0.9355, 0.0655, 0.9344],
    #      [0.0595, 0.0613, 0.0561, 0.9358, 0.0652, 0.9354, 0.9355]]
    # )
    #

    # normal_weight = np.array(
    #     [[0.9270, 0.0547, 0.0669, 0.9432, 0.0739, 0.0773, 0.9268],
    #      [0.8769, 0.0486, 0.0597, 0.8739, 0.9010, 0.0692, 0.0769],
    #      [0.1161, 0.0648, 0.1094, 0.0659, 0.0570, 0.0596, 0.0590],
    #      [0.0443, 0.0437, 0.0640, 0.0805, 0.0630, 0.0650, 0.0667],
    #      [0.0321, 0.0345, 0.0369, 0.0588, 0.0803, 0.0853, 0.0661],
    #      [0.9402, 0.0585, 0.0691, 0.9353, 0.0621, 0.9368, 0.0674],
    #      [0.0634, 0.0630, 0.0718, 0.0600, 0.0722, 0.0642, 0.0577],
    #      [0.0482, 0.0533, 0.0601, 0.0672, 0.8269, 0.0708, 0.0655],
    #      [0.0525, 0.0540, 0.0657, 0.0602, 0.0672, 0.0654, 0.0801],
    #      [0.0653, 0.0593, 0.0667, 0.9255, 0.0679, 0.0693, 0.0680],
    #      [0.0475, 0.0480, 0.0563, 0.0668, 0.9011, 0.0633, 0.0692],
    #      [0.0409, 0.0434, 0.0409, 0.6960, 0.8011, 0.0637, 0.8440],
    #      [0.0443, 0.0469, 0.9284, 0.0615, 0.0625, 0.8495, 0.0631],
    #      [0.0465, 0.0471, 0.0472, 0.0596, 0.0666, 0.8923, 0.0715]]
    # )
    #
    # reduce_weight = np.array(
    #     [[0.9408, 0.0725, 0.9339, 0.9339, 0.0632, 0.9340, 0.9296],
    #      [0.9357, 0.9363, 0.0676, 0.9341, 0.0680, 0.0659, 0.0707],
    #      [0.9395, 0.9411, 0.9351, 0.9329, 0.0614, 0.9350, 0.9338],
    #      [0.0639, 0.0641, 0.0657, 0.9350, 0.9366, 0.9360, 0.9380],
    #      [0.0584, 0.0604, 0.9332, 0.9356, 0.0625, 0.0618, 0.0623],
    #      [0.9379, 0.9391, 0.9367, 0.0625, 0.9365, 0.9354, 0.9350],
    #      [0.0638, 0.0636, 0.9324, 0.9356, 0.9376, 0.0639, 0.9340],
    #      [0.0629, 0.0632, 0.9350, 0.9352, 0.9353, 0.9350, 0.0648],
    #      [0.0621, 0.0633, 0.9356, 0.0651, 0.9366, 0.0634, 0.9368],
    #      [0.0673, 0.0684, 0.9379, 0.0635, 0.9366, 0.0657, 0.9362],
    #      [0.0629, 0.0635, 0.9372, 0.0629, 0.0625, 0.9338, 0.9361],
    #      [0.0610, 0.0627, 0.9322, 0.0624, 0.0629, 0.9349, 0.0649],
    #      [0.0611, 0.0633, 0.9343, 0.0638, 0.9355, 0.0645, 0.9332],
    #      [0.0614, 0.0635, 0.0581, 0.0638, 0.0668, 0.9354, 0.9331]]
    # )

    # loss weight: 15;   learning rate: 0025   1
    # normal_weight = np.array(
    #     [[0.8874, 0.0314, 0.0379, 0.9482, 0.9063, 0.9414, 0.9383],
    #      [0.0341, 0.0348, 0.0401, 0.0478, 0.5464, 0.6835, 0.0444],
    #      [0.0395, 0.0360, 0.0582, 0.0580, 0.0596, 0.0522, 0.0460],
    #      [0.0356, 0.0320, 0.0426, 0.0844, 0.0359, 0.0535, 0.0503],
    #      [0.0259, 0.0269, 0.0239, 0.0396, 0.0304, 0.0469, 0.0459],
    #      [0.0336, 0.0361, 0.0463, 0.0446, 0.0443, 0.0452, 0.0445],
    #      [0.0331, 0.0307, 0.0383, 0.0481, 0.0451, 0.0432, 0.0426],
    #      [0.0245, 0.0256, 0.0202, 0.0454, 0.0437, 0.1048, 0.0459],
    #      [0.0246, 0.0254, 0.0394, 0.0414, 0.0340, 0.0408, 0.0334],
    #      [0.0316, 0.0315, 0.0396, 0.0484, 0.0427, 0.0429, 0.0474],
    #      [0.0333, 0.0317, 0.0408, 0.0477, 0.0425, 0.0388, 0.0497],
    #      [0.0255, 0.0262, 0.0202, 0.0636, 0.0433, 0.0393, 0.0395],
    #      [0.0253, 0.0261, 0.0396, 0.0421, 0.0432, 0.0432, 0.0356],
    #      [0.0233, 0.0250, 0.0376, 0.0370, 0.0386, 0.0377, 0.0475]]
    # )
    #
    # reduce_weight = np.array(
    #     [[0.9545, 0.9575, 0.9530, 0.9581, 0.9552, 0.9532, 0.9543],
    #      [0.0471, 0.0469, 0.9496, 0.0484, 0.0458, 0.0459, 0.0467],
    #      [0.9548, 0.0481, 0.9551, 0.9540, 0.9552, 0.9535, 0.0456],
    #      [0.0465, 0.0464, 0.0460, 0.9520, 0.9524, 0.9530, 0.0462],
    #      [0.0444, 0.0445, 0.9557, 0.0459, 0.0456, 0.0453, 0.9550],
    #      [0.9554, 0.9560, 0.9556, 0.0456, 0.9544, 0.9548, 0.0470],
    #      [0.9540, 0.0456, 0.0448, 0.9533, 0.9524, 0.9543, 0.0454],
    #      [0.0456, 0.0456, 0.9563, 0.0471, 0.9537, 0.9546, 0.0459],
    #      [0.0446, 0.0444, 0.9534, 0.9531, 0.9525, 0.0452, 0.0474],
    #      [0.9545, 0.9552, 0.9550, 0.9542, 0.9536, 0.0469, 0.9549],
    #      [0.0458, 0.0459, 0.0471, 0.9547, 0.9532, 0.9533, 0.9533],
    #      [0.0437, 0.0438, 0.9528, 0.9554, 0.0465, 0.9548, 0.0460],
    #      [0.0432, 0.0430, 0.0423, 0.9537, 0.9547, 0.0453, 0.9545],
    #      [0.0431, 0.0432, 0.0403, 0.0466, 0.0452, 0.9548, 0.9542]]
    # )
    #
    # normal_weight = np.array(
    #     [[0.9012, 0.0306, 0.0379, 0.9492, 0.9345, 0.9478, 0.9440],
    #     [0.0353, 0.0292, 0.0362, 0.0518, 0.8991, 0.9322, 0.0451],
    #     [0.0346, 0.0341, 0.0413, 0.0491, 0.0415, 0.0421, 0.0412],
    #     [0.0344, 0.0322, 0.0387, 0.9434, 0.0485, 0.0453, 0.0560],
    #     [0.0267, 0.0270, 0.0208, 0.0396, 0.0446, 0.0420, 0.0441],
    #     [0.0311, 0.0319, 0.0398, 0.0411, 0.0401, 0.0474, 0.0445],
    #     [0.0332, 0.0325, 0.0419, 0.0425, 0.0437, 0.0446, 0.0479],
    #     [0.0246, 0.0263, 0.0215, 0.0558, 0.0438, 0.0419, 0.0468],
    #     [0.0292, 0.0290, 0.0350, 0.0408, 0.0448, 0.0393, 0.0440],
    #     [0.0320, 0.0332, 0.0409, 0.0444, 0.0412, 0.0445, 0.0451],
    #     [0.0314, 0.0302, 0.0386, 0.0392, 0.8492, 0.8863, 0.8434],
    #     [0.0250, 0.0264, 0.0215, 0.0316, 0.0435, 0.0398, 0.0467],
    #     [0.0283, 0.0285, 0.0342, 0.0532, 0.0466, 0.1305, 0.0414],
    #     [0.0222, 0.0229, 0.0372, 0.0393, 0.0403, 0.0417, 0.0395]]
    # )
    #
    # reduce_weight = np.array(
    #     [[0.9550, 0.0497, 0.9595, 0.9546, 0.9552, 0.9605, 0.0467],
    #      [0.9486, 0.0427, 0.0453, 0.0471, 0.0470, 0.9545, 0.9553],
    #      [0.9559, 0.0483, 0.9558, 0.0453, 0.9542, 0.9551, 0.0451],
    #      [0.0452, 0.0453, 0.0462, 0.9545, 0.0463, 0.9539, 0.9544],
    #      [0.0453, 0.0457, 0.9574, 0.0443, 0.0448, 0.9547, 0.9519],
    #      [0.9533, 0.0464, 0.9561, 0.0435, 0.9526, 0.9537, 0.9536],
    #      [0.0431, 0.0439, 0.0454, 0.9533, 0.9542, 0.9534, 0.9543],
    #      [0.0418, 0.0439, 0.9573, 0.0442, 0.9520, 0.9562, 0.0449],
    #      [0.0416, 0.0437, 0.0481, 0.9517, 0.9529, 0.0441, 0.9532],
    #      [0.9532, 0.9546, 0.9532, 0.9539, 0.9540, 0.9544, 0.9541],
    #      [0.0445, 0.0451, 0.0463, 0.0458, 0.9530, 0.9547, 0.9541],
    #      [0.0433, 0.0450, 0.9574, 0.9534, 0.0460, 0.9543, 0.0454],
    #      [0.0428, 0.0445, 0.0473, 0.0458, 0.9538, 0.0453, 0.9540],
    #      [0.0415, 0.0427, 0.9501, 0.0450, 0.0460, 0.9538, 0.9526]]
    # )
    #
    # normal_weight = np.array(
    #     [[0.8124, 0.0305, 0.0347, 0.9306, 0.8672, 0.9373, 0.9321],
    #      [0.0385, 0.0356, 0.0409, 0.0621, 0.2386, 0.0491, 0.0490],
    #      [0.0362, 0.0352, 0.0410, 0.0481, 0.0536, 0.0428, 0.0415],
    #      [0.0457, 0.0381, 0.0467, 0.0523, 0.0367, 0.0513, 0.0450],
    #      [0.0302, 0.0307, 0.0272, 0.0454, 0.0484, 0.0440, 0.0493],
    #      [0.0355, 0.0349, 0.0403, 0.0426, 0.0405, 0.0457, 0.0428],
    #      [0.0363, 0.0336, 0.0385, 0.0464, 0.0483, 0.0393, 0.0445],
    #      [0.0315, 0.0310, 0.0267, 0.0989, 0.0491, 0.0398, 0.0406],
    #      [0.0271, 0.0273, 0.0394, 0.0361, 0.0384, 0.0376, 0.0435],
    #      [0.0322, 0.0312, 0.0358, 0.0413, 0.2389, 0.0434, 0.0426],
    #      [0.0338, 0.0308, 0.0361, 0.0518, 0.0378, 0.0457, 0.0665],
    #      [0.0291, 0.0284, 0.0234, 0.0412, 0.0406, 0.0433, 0.0426],
    #      [0.0260, 0.0255, 0.0390, 0.0410, 0.0405, 0.0339, 0.0468],
    #      [0.0252, 0.0248, 0.0367, 0.0409, 0.0422, 0.0386, 0.0419]]
    # )
    #
    # reduce_weight = np.array(
    #     [[0.9554, 0.0514, 0.9571, 0.9525, 0.9536, 0.9579, 0.9548],
    #      [0.9526, 0.0459, 0.9561, 0.0476, 0.0461, 0.0490, 0.0474],
    #      [0.9544, 0.0477, 0.9570, 0.9535, 0.0460, 0.9535, 0.0468],
    #      [0.9546, 0.0471, 0.0453, 0.9538, 0.0451, 0.9548, 0.0473],
    #      [0.0454, 0.0458, 0.9587, 0.9507, 0.0470, 0.0465, 0.9535],
    #      [0.9550, 0.0470, 0.9546, 0.0457, 0.9547, 0.9543, 0.0461],
    #      [0.0454, 0.0452, 0.0464, 0.9545, 0.9541, 0.9534, 0.9545],
    #      [0.0447, 0.0445, 0.9539, 0.9539, 0.9526, 0.9527, 0.0446],
    #      [0.0450, 0.0448, 0.0453, 0.9535, 0.9544, 0.0466, 0.0456],
    #      [0.9541, 0.9550, 0.0464, 0.0457, 0.9534, 0.0454, 0.9531],
    #      [0.0456, 0.0460, 0.0463, 0.9543, 0.9549, 0.9548, 0.9539],
    #      [0.0447, 0.0450, 0.9562, 0.9539, 0.0465, 0.9541, 0.0455],
    #      [0.0435, 0.0440, 0.9544, 0.9530, 0.9531, 0.9544, 0.9539],
    #      [0.0438, 0.0441, 0.0423, 0.0458, 0.0463, 0.9543, 0.9530]]
    # )
    #
    normal_weight = np.array(
        [[0.9031, 0.0328, 0.0403, 0.0428, 0.8593, 0.9326, 0.9377],
         [0.0329, 0.0333, 0.0384, 0.9197, 0.8230, 0.0499, 0.0449],
         [0.0321, 0.0333, 0.0466, 0.0517, 0.0612, 0.0460, 0.0505],
         [0.0291, 0.0285, 0.0363, 0.0508, 0.0346, 0.0493, 0.0538],
         [0.0224, 0.0235, 0.0198, 0.0532, 0.0640, 0.0562, 0.0377],
         [0.0292, 0.0294, 0.0367, 0.0419, 0.0454, 0.0606, 0.0422],
         [0.0284, 0.0278, 0.0337, 0.0469, 0.0603, 0.0400, 0.0403],
         [0.0229, 0.0227, 0.0171, 0.0641, 0.0388, 0.0401, 0.0458],
         [0.0217, 0.0223, 0.0378, 0.0255, 0.0388, 0.0499, 0.0424],
         [0.0279, 0.0301, 0.0377, 0.0424, 0.4117, 0.0363, 0.0459],
         [0.0261, 0.0266, 0.0321, 0.0455, 0.0400, 0.0416, 0.1249],
         [0.0219, 0.0229, 0.0175, 0.0384, 0.0398, 0.0396, 0.0446],
         [0.0204, 0.0209, 0.0362, 0.0373, 0.0395, 0.0275, 0.0405],
         [0.0195, 0.0201, 0.0346, 0.0426, 0.0326, 0.0521, 0.0409]]
    )

    reduce_weight = np.array(
        [[0.9555, 0.0510, 0.9578, 0.9526, 0.9537, 0.9530, 0.0469],
         [0.0453, 0.0455, 0.0451, 0.9518, 0.9528, 0.0431, 0.9542],
         [0.9544, 0.9565, 0.9548, 0.9535, 0.9547, 0.9559, 0.0453],
         [0.0448, 0.0453, 0.0447, 0.9534, 0.9527, 0.9577, 0.0464],
         [0.0409, 0.0421, 0.9513, 0.0462, 0.0471, 0.9547, 0.9541],
         [0.9547, 0.9559, 0.9554, 0.0472, 0.9548, 0.9535, 0.9540],
         [0.0454, 0.0456, 0.0460, 0.9533, 0.9548, 0.9540, 0.9535],
         [0.0428, 0.0437, 0.9534, 0.0458, 0.9529, 0.9540, 0.0454],
         [0.0432, 0.0445, 0.9563, 0.9550, 0.9539, 0.0448, 0.0459],
         [0.9547, 0.9557, 0.9559, 0.9546, 0.9547, 0.0457, 0.9557],
         [0.0458, 0.0464, 0.0465, 0.9530, 0.9539, 0.9536, 0.9526],
         [0.0440, 0.0453, 0.0479, 0.9541, 0.0453, 0.9543, 0.0461],
         [0.0439, 0.0449, 0.0478, 0.9524, 0.9530, 0.9521, 0.9529],
         [0.0435, 0.0450, 0.0531, 0.0462, 0.0463, 0.9543, 0.9543]]
    )

    return (normal_weight, reduce_weight)

if __name__ == '__main__':
    if len(sys.argv) < 3:
        print("usage:\n python {} WEIGHT_PATH PARSE_METHOD".format(sys.argv[0]))
        sys.exit(1)
    path, parse_method = sys.argv[1], sys.argv[2]
    #normal_weight, reduce_weight = generate_weight()
    normal_weight = np.load(os.path.join(path, 'normal_weight.npy'))
    reduce_weight = np.load(os.path.join(path, 'reduce_weight.npy'))
    parse_genotype((normal_weight, reduce_weight), 4, 4, path,  parse_method=parse_method, op_threshold=0.85)
    print('parse done !')
